<?xml version="1.0"?>
<H2>
  <SourceCode>//var topPanel = panel.clear().add_Panel();
var topPanel = "Util - Inject O2 into Other processes".popupWindow(600,600); 
topPanel.insert_LogViewer(); 
var actionsPanel = topPanel.insert_Above(40,"Actions"); 
var processesTreeView	 = topPanel.title("Current Processes (with MainWindowHandle != 0)").add_TreeView_with_PropertyGrid().sort();
var modulesTreeView 	 = topPanel.insert_Right("Selected Process Modules List").add_TreeView_with_PropertyGrid().sort();
processesTreeView.splitContainer().splitterDistance(300);
modulesTreeView.splitContainer().splitterDistance(300);
Process selectedProcess = null;
 
processesTreeView.afterSelect&lt;Process&gt;( 
	(process)=&gt; {		 
					selectedProcess = process;
					modulesTreeView.clear();
					modulesTreeView.parent&lt;GroupBox&gt;().set_Text("Showing Modules for process: {0} (id: {1})".format(process.ProcessName, process.Id));
					try
					{
						foreach(ProcessModule module in process.Modules)
							modulesTreeView.add_Node(module.ModuleName, module);
						modulesTreeView.selectFirst();
					}
					catch(Exception ex)
					{
						ex.log();
					}
				});
				
Action refreshProcessList = 
	()=&gt;{
			processesTreeView.clear();
			foreach(Process process in Processes.getProcesses())
				if (process.MainWindowHandle != IntPtr.Zero &amp;&amp; process.ProcessName !="Dbgview")			//Dbgview doens't like to send Dbg messages to itself
					processesTreeView.add_Node("{0,-40} id: {1}".format(process.ProcessName, process.Id), process);
			processesTreeView.selectFirst();			
		};

Action refreshProcessList_in_1Second = 
	()=&gt;{
			this.sleep(1000);
			refreshProcessList();
		};
Action injectO2IntoProcess = 
	()=&gt;{			
			var x64 = modulesTreeView.nodes().size()==0;		// not the best way to find out if the target is 64bits
			"Injecting O2 into process '{0}' with id {1}".info(selectedProcess.ProcessName, selectedProcess.Id); 
			var o2Injector =  new API_O2_Injector();			 
			o2Injector.injectIntoProcess(selectedProcess.Id ,x64);    
		}; 

processesTreeView.add_ContextMenu()
				 .add_MenuItem("Bring this process MainWindow to Front", true,()=&gt; selectedProcess.process_MainWindow_BringToFront())
				 .add_MenuItem("Inject O2 Into this  process", true,()=&gt; injectO2IntoProcess())
				 .add_MenuItem("Refresh Process List", true,()=&gt; refreshProcessList())
				 ;


actionsPanel.add_Link("Inject O2 into Process",  ()=&gt;injectO2IntoProcess()) 
			.append_Label("(and open C# REPL Editor)").autoSize()		
			.append_Link("Open LinqPad (C#)", 	 ()=&gt; { "LinqPad.cs".executeFirstMethod()	; refreshProcessList_in_1Second(); })
			.append_Link("Open Calc (C++)", 	 ()=&gt; { "calc.exe".startProcess() 		 	; refreshProcessList_in_1Second(); })
			.append_Link("Open DebugView", 		 ()=&gt; { "DebugView.cs".executeFirstMethod() ; });

refreshProcessList();  
//injectO2IntoProcess();  
//using System.Diagnostics
//O2File:API_O2_Injector.cs   
//O2Tag_DontAddExtraO2Files 
 </SourceCode>
  <ReferencedAssemblies />
</H2>