//panel.clear();
//var topPanel = panel;  
var topPanel = O2Gui.open<Panel>("Tool - Method Invocations Creator", 1000,600)
					.insert_LogViewer();; 


var runOnSeparateAppDomain = false;
 
var baseFolder = "";
O2MappedAstData astData = null;
var useCachedData = true; //false;//true ;
var showLogViewer = true;   
var sourceCodeViewer = topPanel.add_SourceCodeViewer();
var treeViewPanel = sourceCodeViewer.insert_Left<Panel>();		  	 				     
treeViewPanel.parent<SplitContainer>().splitterDistance(400);							     
var referencesToLoad = treeViewPanel.insert_Below<GroupBox>(100).set_Text("References").add_TextArea();
var optionsPanel = referencesToLoad.insert_Below<Panel>(40);
var methodMappingsFilter = treeViewPanel.insert_Above<Panel>(20).add_TextBox().fill();
TreeView methodsMappings_TreeView = null;
MethodMappings loadedMethodMappings = null;  
var resultsFolder = "_AstEngine_ExternalMappings".tempDir(); 
optionsPanel.add_Label("Results Folder")
			.append_TextBox(resultsFolder)
			.onTextChange((text)=> resultsFolder=text)
			.align_Right(optionsPanel);							

Action showMethodMappings =	
	()=>{ 
			if (methodsMappings_TreeView.notNull() && loadedMethodMappings.notNull())
			{
				loadedMethodMappings.showInTreeView(methodsMappings_TreeView,methodMappingsFilter.get_Text());
				methodsMappings_TreeView.selectFirst();				 	        
			}
		};
 
optionsPanel.add_Link("Clear loaded Data", 20,0, 
	()=>{
			loadedMethodMappings = new MethodMappings();
			showMethodMappings();
		});
		
optionsPanel.add_CheckBox("Run on separate AppDomain", 20,100, (value)=> runOnSeparateAppDomain= value)
			.check()
			.autoSize(); 
	
methodMappingsFilter.onEnter((text)=> showMethodMappings()); 

Action<string> loadFilesFromFolder = null; 

loadFilesFromFolder= 
	(sourceFolder)=>{
		O2Thread.mtaThread(
			()=>{
					if (sourceFolder.valid().isFalse())
						return;
					"loading files from: {0}".info(sourceFolder); 	 									
					var methodFilder = @"";
					var references = referencesToLoad.get_Text().lines();					
					var results = MethodMappings_Engine.calculateMethodMappings(sourceFolder, resultsFolder,references,runOnSeparateAppDomain);     
					
					loadedMethodMappings = resultsFolder.files("*.xml").loadAndMergeMethodMappings();					
					
					methodsMappings_TreeView = treeViewPanel.CreateTreeViewFor_MethodMappingsView(sourceCodeViewer)
														    .onDrop(loadFilesFromFolder);
					showMethodMappings();														
				});
			};
							     
 
treeViewPanel.onDrop(loadFilesFromFolder);

referencesToLoad.set_Text("System.Web".line() +    
						  "System.Data");
 
//loadFilesFromFolder(@"C:\O2\DemoData\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS");

return astData; 

//using FluentSharp.CSharpAST
//using FluentSharp.CSharpAST.Utils
//using O2.XRules.Database.Languages_and_Frameworks.DotNet	
//using ICSharpCode.SharpDevelop.Dom;
//using ICSharpCode.NRefactory;
//using ICSharpCode.NRefactory.Ast;
//O2File:MethodMappings_Engine.cs
//O2File:ascx_ManualMethodStreams.cs
//O2File:Ast_Engine_ExtensionMethods.cs
//O2File:ascx_ManualMethodStreams.cs
//O2Ref:O2_Platform_External_SharpDevelop.dll
//O2Ref:Quickgraph.dll
//O2Ref:GraphSharp.dll 
//O2Ref:GraphSharp.Controls.dll