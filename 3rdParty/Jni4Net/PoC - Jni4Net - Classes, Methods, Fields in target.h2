<?xml version="1.0"?>
<H2>
  <SourceCode>Bridge.CreateJVM(new BridgeSetup(){Verbose=true}); //only needs to be called once

var topPanel = "PoC - Jni4Net - Classes, Methods, Fields in target".popupWindow(1000,400);
//var topPanel = panel.add_Panel(true);
 
var actionPanel = topPanel.insert_ActionPanel();
var decompileClasses = false;
//var treeView = topPanel.insert_Left().add_TreeView_with_PropertyGrid().sort();
var treeView = topPanel.insert_Left().add_TreeView().sort();
var codeViewer = topPanel.title("Decompiled Java code of selected class").add_SourceCodeEditor();

actionPanel.add_Link("REPL selectedNode", ()=&gt; treeView.selected().Tag.script_Me())
		   .append_Link("Copy selectedNode text to clipboard", ()=&gt; treeView.selected().str().clipboardText_Set())
		   .append_CheckBox("Decompile Classes", (value)=&gt; decompileClasses = value).autoSize().tick();
 
treeView.java_SetTreeView_To_Show_Jni4Net_Reflection_Data();

var jni4Net_Active = new API_Jni4Net_Active();

var classes = jni4Net_Active.java_From_ClassLoader_get_Loaded_Classes();

Action&lt;string&gt; showClasses = 
	(filter)=&gt;{										
					var classesToShow =  (filter.notValid()) 
											? classes
											: classes.Where((@class)=&gt;@class.getName().str().regEx(filter));
					treeView.beginUpdate()
								.clear()
								.add_Nodes(classesToShow, (@class)=&gt;@class.getName(), true) 
	    					.endUpdate();
	    
					treeView.nodes().colorNodes(Color.DarkRed);
					treeView.selectFirst();
			  };

treeView.insert_Above(40,"Filter (RegEx applied on text change)")
			.add_TextBox().fill().onTextChange(showClasses);

Action&lt;Class&gt; showClassSourceCode = 
	(@class)=&gt;{
					codeViewer.enabled(false);
					O2Thread.mtaThread(
						()=&gt;{
								var jad = new API_Jad();
								if (decompileClasses)
								{
									var pathToJar = @class.java_Get_Class_Jar_File_Location();
									if (pathToJar.valid())
									{
										var extractedFiles = jad.extractJarIntoTempFolder(pathToJar);
										var classFile = extractedFiles.pathCombine(@class.FullName.replace(".","\\") + ".class");
										var javaCode = jad.decompile(classFile);
										codeViewer.set_Text(javaCode, ".java");
									}
									else
									{
										codeViewer.set_Text("Error: Could not get location for class: {0}".format(@class.FullName));
									}
									
								}
								codeViewer.enabled(true);
							});
				};
				
treeView.afterSelect&lt;Class&gt;( 
	(@class) =&gt; {	 
					showClassSourceCode	(@class);
				});
treeView.afterSelect&lt;Field&gt;( 
	(field)=&gt;{	
				showClassSourceCode(field.getDeclaringClass());				
			 });
showClasses(""); 
//showClasses("zap");

return "done";


//using java.lang
//using net.sf.jni4net;
//using net.sf.jni4net.jni
//using java.lang.reflect
//using net.sf.jni4net.adaptors
//O2Ref:Jni4Net/lib/jni4net.n-0.8.7.0.dll

//O2File:API_Jni4Net_Active.cs
//O2File:API_Jad.cs</SourceCode>
  <ReferencedAssemblies />
</H2>