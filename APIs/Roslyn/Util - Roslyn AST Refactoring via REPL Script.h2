O2Setup.extractEmbededConfigZips();

var topPanel = "Util - Roslyn AST Refactoring via REPL Script".popupWindow(1200,600).insert_LogViewer();
//var topPanel = panel.clear().add_Panel(); 


var codeToRefactor = 
@"{
	var stream =  new System.IO.MemoryStream () { Position = 12 };	  	
}".trim();
var originalCodePanel = topPanel.insert_Left(400,"Original Code");
var refactoredCodePanel = topPanel.insert_Right(400,"Refactored Code");


originalCodePanel.insert_Below(30).add_RichTextBox()
				 .set_Text(codeToRefactor.ast_Script().compiler().errors_Details()).foreColor(Color.Red);

var refactorCodeCompileErrors = refactoredCodePanel.insert_Below(30).add_RichTextBox().foreColor(Color.Red);

var script = topPanel.add_Script(); 
script.onCompileExecuteOnce(); 

codeToRefactor.view_Ast(codeToRefactor.view_Ast(originalCodePanel)).control<SourceCodeEditor>(true)
	.onTextChange(
		(text)=>{
					script.InvocationParameters.Clear();
					script.InvocationParameters.add("originalCode", text);
				});
script.InvocationParameters.Add("originalCode", codeToRefactor);

script.onExecute =
	(result)=>{
				refactoredCodePanel.add_AstViewer(result.str(),false);
				refactoredCodePanel.controls<TreeView>(true).second().expandAll();
				refactorCodeCompileErrors.set_Text(result.str().ast_Script().compiler().errors_Details());
		 	  };




script.Code = @"
var refactoredCode = originalCode.refactor_InitializerExpressions();
return refactoredCode;
//var ast = originalCode.ast_Script();
//return ast.str();
//O2File:_Extra_methods_Roslyn_API.cs
//using Roslyn.Compilers.CSharp;
//using Roslyn.Compilers;
//O2Ref:Roslyn.Compilers.dll
//O2Ref:Roslyn.Compilers.CSharp.dll
".trim();




return "done";	   

//using FluentSharp.FluentRoslyn
//using Roslyn.Compilers.CSharp;
//using Roslyn.Compilers;
//O2Ref:Roslyn.Compilers.dll
//O2Ref:Roslyn.Compilers.CSharp.dll

//O2Ref:FluentSharp.Roslyn.dll

//O2File:_Extra_methods_Roslyn_API.cs
//O2File:_Extra_methods_Roslyn_API_GuiHelpers.cs

//O2Package:_Extra_methods_Roslyn_API.cs,_Extra_methods_Roslyn_API_GuiHelpers.cs,_Extra_methods_Roslyn_API_Refactoring.cs
