//var topPanel = panel.clear().add_Panel();
var topPanel = "Findings Graph".popupWindow(1000,500);
topPanel.insert_LogViewer();
var graph = topPanel.add_Graph();	
//using GraphSharp.Algorithms.Layout.Simple.Tree;
//using GraphSharp.Algorithms.Layout;
//using QuickGraph;
//using GraphSharp.Controls; 
//var byGraph = new BidirectionalGraph<object, IEdge<object>>();


//return byGraph;

var findingsViewer = topPanel.insert_Left(150).add_FindingsViewer();

Func<IO2Trace, string > getNodeText =  
	(trace)=>{	
	
				var signature =  new FilteredSignature(trace.signature);
				
				return "{0}.{1}".format(signature.sFunctionClass, signature.sFunctionName).remove("SuperSecureBank").remove("System");
				
				if (signature.sFunctionClass.contains("SuperSecureBank"))
//					return "{0}.{1} [{2}]".format(signature.sFunctionClass, signature.sFunctionName, trace.lineNumber);
					return "{0}.{1}".format(signature.sFunctionClass, signature.sFunctionName).remove("SuperSecureBank");
				else
					return "{0}".format(signature.sFunctionName);
				
				//return signature.sFunctionNameAndParams;
			 };;


Action<IO2Trace, IO2Trace> addTraceToGraph =
	(nodeA, nodeB)=>{ 
						if (nodeB.isNull())
							graph.add_Node(getNodeText(nodeA));
						else
							graph.add_Edge(getNodeText(nodeB),getNodeText(nodeA));
					};

Action<IO2Finding> addFindingToGraph = 
	(o2Finding)=>{					
						IO2Trace lastTrace = null; 
						foreach(var trace in o2Finding.allTraces())
						{
							addTraceToGraph(trace, lastTrace);
							lastTrace = trace;
						}	
				 };


var o2FindingsFile = @"C:\O2\Demos\SI - SuperSecureBank\O2_Data\AppScan Source\SuperSecureBank  11-4-11 1046AM.ozasmt";
var o2Findings = o2FindingsFile.loadFindingsFile().withTraces();
 
graph.tree();  
  
var optionsPanel = topPanel.add_GraphOptions(graph);  			  


					
			// GraphOptionsPanel options & actions 
						 
			  
//O2File:GraphSharp_ExtensionMethods.cs
//new System.Windows.Forms.ComboBox().dropDownList()

//topPanel.visible(false);
findingsViewer.show(o2Findings);

foreach(var o2Finding in o2Findings.withTraces()) 
	addFindingToGraph(o2Finding); 
//for(var i =0; i < 24 ; i++)
//	addFindingToGraph(o2Findings[i]); 
 
graph.overlapRemovalParameters(10, 30);
graph.defaultLayout();

"done".info();
//graph.sleep(2000);
//graph.edgeToAll(500);
//topPanel.visible(true);	
 

//return o2Findings.withTraces();

//graph.clear();



//var topPanel = O2Gui.open<Panel>("{name}",700,400);




//graph.tree();
//graph.defaultLayout();
//graph.showAllLayouts(2000);
//graph.circular();
 
return "ok";

//using O2.XRules.Database.Utils
//using O2.XRules.Database.Findings
//using FluentSharp.CSharpAST
//using FluentSharp.CSharpAST.Utils
//using O2.XRules.Database.Utils
//using FluentSharp.WinForms.O2Findings; 

//O2File:Findings_ExtensionMethods.cs
//O2File:VerticesAndEdges_ExtensionMethods.cs



//O2Ref:FluentSharp.WPF.dll
//O2Ref:WindowsFormsIntegration.dll
//O2Ref:GraphSharp.dll
//O2Ref:QuickGraph.dll
//O2Ref:GraphSharp.Controls.dll

//O2Ref:PresentationCore.dll
//O2Ref:PresentationFramework.dll
//O2Ref:WindowsBase.dll
//O2Ref:System.Xaml.dll
